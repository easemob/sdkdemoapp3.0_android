// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    repositories {
        jcenter()
        // ========== fabric start
        //maven { url 'https://maven.fabric.io/public' }
        // ========== fabric end
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.3.0'
        // ========== fabric start
        //classpath 'io.fabric.tools:gradle:1.+'
        // ========== fabric end
    }
}


allprojects {
    repositories {
        jcenter()
        maven {  url "https://raw.githubusercontent.com/HyphenateInc/Hyphenate-SDK-Android/master/repository" }
    }
}

apply plugin: 'com.android.application'
// ========== fabric start
//apply plugin: 'io.fabric'
// ========== fabric end

// ========== fabric start
repositories {
   // maven { url 'https://maven.fabric.io/public' }
}
// ========== fabric end


android {
    compileSdkVersion 23
    buildToolsVersion '25.0.0'

    defaultConfig {
        applicationId "com.easemob.chatuidemo"
        minSdkVersion 9
        targetSdkVersion 22
        multiDexEnabled true
    }

	sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
            jniLibs.srcDirs = ['libs']
        }

        // Move the tests to tests/java, tests/res, etc...
        instrumentTest.setRoot('tests')

        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }
    android {
        lintOptions {
            // Or, if you prefer, you can continue to check for errors in release builds,
            // but continue the build even when errors are found:
            abortOnError false
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }
}

dependencies {
    compile project(':redpacketlibrary')
    compile project(':EaseUI')
    compile fileTree(include: '*.jar', exclude: 'android-support-multidex.jar', dir: 'libs')

    // ========== fabric start
    //compile('com.crashlytics.sdk.android:crashlytics:2.6.1@aar') {
    //    transitive = true;
    //}
    // ========== fabric end
}

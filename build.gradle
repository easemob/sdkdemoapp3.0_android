// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    repositories {
        jcenter()
        // ============== fabric start
//        maven { url 'https://maven.fabric.io/public' }
        // ============== fabric end
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.3.0'
        // ============== fabric start
//        classpath 'io.fabric.tools:gradle:1.+'
        // ============== fabric end
    }
}

allprojects {
    repositories {
        jcenter()
    }
}

apply plugin: 'com.android.application'
// ============== fabric start
//apply plugin: 'io.fabric'
// ============== fabric end

// ============== fabric start
//repositories {
//    maven { url 'https://maven.fabric.io/public' }
//}
// ============== fabric end


android {
    compileSdkVersion 25
    buildToolsVersion '25.0.2'

    defaultConfig {
        applicationId "com.hyphenate.chatuidemo"
        minSdkVersion 11
        targetSdkVersion 22
        multiDexEnabled true
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
            jniLibs.srcDirs = ['libs']
        }

        // Move the tests to tests/java, tests/res, etc...
        instrumentTest.setRoot('tests')

        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }
}

dependencies {
    compile project(':redpacketlibrary')
    compile project(':EaseUI')
    compile fileTree(include: '*.jar', dir: 'libs')
    // 解决方法数超过65536问题扩展库
    compile 'com.android.support:multidex:1.0.1'
    //考虑到在eclipse中,直接使用源码
    //    compile ('com.anthonycr.grant:permissions:1.0'){
    //        exclude module: 'support-v4'
    //    }
    // ============== fabric start
    //    compile('com.crashlytics.sdk.android:crashlytics:2.6.1@aar') {
    //        transitive = true;
    //    }
    // ============== fabric end
}
